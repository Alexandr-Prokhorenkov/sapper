import { getRandomBombs } from "./components/random.js";

const BOMBS = { //–¥–µ–ª–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –±–æ–º–± –≤—ã—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç size
  6: 8,
  10: 20,
  12: 40
}
let size;
const button = document.querySelector(".btn");
const select = document.querySelector("#select");
const element = document.querySelector('#elem');

const createCell = (num) => {
  const td = document.createElement("td");
  const content = document.createElement('span');
  const cover = document.createElement('div');
  content.innerText = num === -1 ? 'üí£' : num !== 0 ? num : '';
  if(content.textContent=== 'üí£') {
    td.classList.add('bomb')
  }
  if(content.textContent==1) {
    content.classList.add('bomb-count-1')
  }
  if(content.textContent==2) {
    content.classList.add('bomb-count-2')
  }
  if(content.textContent==3) {
    content.classList.add('bomb-count-3')
  }
  if(content.textContent>=4) {
    content.classList.add('bomb-count-4')
  }

  content.classList.add('shadow')
  cover.classList.add('cover');
  cover.appendChild(content);
  td.appendChild(cover);
  td.classList.add("grey", "cell");
  let flag = true
  td.addEventListener('contextmenu', function(event){
    event.preventDefault()
    if(flag===true) {
      td.innerHTML = 'üö©'
      flag = false
    }
    else {
      td.innerHTML = '';
        flag = true;
    }
    })

  td.addEventListener('click', function(){
    if(td.classList.contains('bomb')) {
      alert('GAME OVER')
    const tdAll = document.querySelectorAll('td')
    tdAll.forEach((elem) =>{
      elem.classList.remove('cell')
    })
    const spanAll = document.querySelectorAll('span')
    spanAll.forEach((elem) =>{
      elem.classList.remove('shadow')
    })

    }
    td.classList.remove('cell')
    content.classList.remove('shadow')
  })
  return td
}

const createTable = (field, size) => {
  const table = document.createElement("table");
  let tr;
  for(let i = 0; i < field.length; i++) {
    if(i % size === 0) {
      if(tr) table.appendChild(tr);
      tr = document.createElement("tr");
      tr.appendChild(createCell(field[i]))
      table.appendChild(tr);
      continue;
    } 
    tr.appendChild(createCell(field[i]));
  }
  return table
}

select.addEventListener("change", function () {
  size = Number(this.value);
});

const getField = (bombsIndex, size) => { //—Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –ø–æ–ª—è
  const result = new Array(size**2).fill(0);  //—Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Å –ø–æ–ª–µ–º –∑–∞–ø–æ–ª–Ω—è–µ–º –µ–≥–æ 0

  bombsIndex.forEach((v, _) => result[v] = -1 ); // —Ñ–æ—Ä–º–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ result –∏–∑ set'a *?????

  for(let i = 0; i < result.length; i++) { //–ø—Ä–æ—Ö–æ–¥–∏—Å—è —Ü–∏–∫–ª–æ–º –ø–æ –º–∞—Å—Å–∏–≤—É result
    if(!bombsIndex.has(i)) continue; //–µ—Å–ª–∏ –º—ã –Ω–µ –Ω–∞—Ç—ã–∫–∞–µ–º—Å—è –Ω–∞ –±–æ–º–±—É –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    const isRight = (i + 1) % size === 0; //—Ç—É—Ç –ø–æ–Ω—è—Ç–Ω–æ –¥–µ–ª–∏–º —á–∏—Å–ª–æ —Å–∞–º–æ –Ω–∞ —Å–µ–±—è –ª–∏–±–æ –Ω–∞ —Å–µ–±—è*2 –∏—Ç–¥
    const isLeft = i % size === 0; //—Ç—É—Ç –ø–æ —Å—É—Ç–∏ —Ç–æ–∂–µ —Å–∞–º–æ–µ –º—ã –¥–µ–ª–∏–º –ª–∏–±–æ 0 / size –ª–∏–±–æ size/size –õ–∏–±–æ size*2/size –∏—Ç–¥ –Ω–æ —Å–∞–º–∞ —Ñ–æ—Ä–º–∞ –∑–∞–ø–∏—Å–∏ –Ω–µ–ø–æ–Ω—è—Ç–Ω–∞
    const isTop = i - size < 0; // —Ç—É—Ç —è—Å–Ω–µ–Ω—å–∫–æ
    const isButtom = i + size >= result.length; //—Ç—É—Ç –≤—Å–µ –ø–æ–Ω—è—Ç–Ω–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ –∑–∞—á–µ–º + –ø–µ—Ä–µ–¥ i
    if(!isLeft && result[i - 1] !== -1) { //—Ç—É—Ç –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ –º—ã –ø–∏—à–µ–º —á—Ç–æ –µ—Å–ª–∏ –º—ã –Ω–µ —Å–ª–µ–≤–∞ –∏ —è—á–µ–π–∫–∞ —Å –ø—Ä–∞–≤–∞ –±–µ–∑ –±–æ–º–±—ã –º—ã —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É ???
      result[i - 1]++
    }
    if(!isRight && result[i + 1] !== -1) {
      result[i + 1]++
    }
    if(!isTop) {
      const index = i - size //–≤–æ—Ç —Ç—É—Ç –Ω–µ–ø–æ–Ω–∏–º–∞—é –µ—Å–ª–∏ –º—ã –≤–≤–µ—Ä—Ö—É –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∏–∂–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–æ –æ–Ω–∏ –±—É–¥—É—Ç i + size
      if(result[index] !== -1) result[index]++;
      if(!isRight && result[index + 1] !==-1) result[index + 1]++;
      if(!isLeft && result[index - 1] !== -1) result[index - 1]++;
    }
    if(!isButtom) {
      const index = i + size; //–∞ —Ç—É—Ç —Å–æ–æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ i - size 
      if(result[index] !== -1) result[index]++;
      if(!isRight && result[index + 1] !== -1) result[index + 1]++;
      if(!isLeft && result[index -1 ] !== -1) result[index - 1]++;
    }
  }

  return result;
}

button.addEventListener("click", function () {
  const existingTable = document.querySelector('table');
  if(existingTable) {
    existingTable.remove()
  }
    const bombsIndex = getRandomBombs(1, size**2, BOMBS[size]);
    const field = getField(bombsIndex, size);
    let table = createTable(field, size)
    element.appendChild(table)
}
);


// setFlag(isFlagged) {
//   this.isFlagged = isFlagged;
//   this.boxElem.innerHTML = isFlagged ? "üö©" : "";
// }


// this.boxElem.addEventListener("contextmenu", (e) => {
//   e.preventDefault();
//   this.setFlag(true);
// });